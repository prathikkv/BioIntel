version: '3.8'

services:
  # FastAPI Backend
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - DEBUG=False
      - DATABASE_URL=postgresql://biointel:biointel@db:5432/biointel_db
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-jwt-secret-key}
      
      # Free AI Configuration (no API keys needed)
      - USE_FREE_AI=true
      - HUGGINGFACE_CACHE_DIR=/app/cache/huggingface
      - TORCH_CACHE_DIR=/app/cache/torch
      
      # Free APIs Configuration (no API keys needed)
      - PUBMED_BASE_URL=https://eutils.ncbi.nlm.nih.gov/entrez/eutils
      - UNIPROT_BASE_URL=https://rest.uniprot.org
      - ENSEMBL_BASE_URL=https://rest.ensembl.org
      - STRING_BASE_URL=https://string-db.org/api
      - KEGG_BASE_URL=https://rest.kegg.jp
      
      # Processing Limits
      - MAX_FILE_SIZE=50000000
      - MAX_PAPER_LENGTH=100000
      - MAX_GENES_PER_ANALYSIS=1000
      
      # Rate Limiting
      - RATE_LIMIT_REQUESTS=100
      - RATE_LIMIT_WINDOW=60
    depends_on:
      - db
      - redis
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./reports:/app/reports
      - ./cache:/app/cache
    networks:
      - biointel-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery Worker for background tasks
  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - ENVIRONMENT=production
      - DEBUG=False
      - DATABASE_URL=postgresql://biointel:biointel@db:5432/biointel_db
      - REDIS_URL=redis://redis:6379/0
      - USE_FREE_AI=true
      - HUGGINGFACE_CACHE_DIR=/app/cache/huggingface
      - TORCH_CACHE_DIR=/app/cache/torch
    depends_on:
      - db
      - redis
    volumes:
      - ./cache:/app/cache
      - ./logs:/app/logs
    networks:
      - biointel-network
    restart: unless-stopped
    command: celery -A main.celery worker --loglevel=info

  # PostgreSQL Database
  db:
    image: postgres:13
    environment:
      - POSTGRES_DB=biointel_db
      - POSTGRES_USER=biointel
      - POSTGRES_PASSWORD=biointel
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - biointel-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U biointel -d biointel_db"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - biointel-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Streamlit Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "8501:8501"
    environment:
      - BACKEND_URL=http://api:8000
    depends_on:
      - api
    networks:
      - biointel-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - api
      - frontend
    networks:
      - biointel-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  biointel-network:
    driver: bridge